AULA 5
- Sequelize
  - ORM para nodejs para bancos relacionais
- ORM
  - Forma de abstrair banco de dados
  - Forma como se comunica com banco de dados
  - Tabelas viram models
  - Independente de banco de dados MyQSL ou Postgres
- Manupular dados
  - Sem SQL (na maioria das vezes)
  - Apenas código JavaScript
- Migrations
  - controle de versão para banco de dados
  - cada arquivo contem instruções para criação, alteração ou remoção de tabelas ou colunas
  - manter base atualizada entre todos os desenvolvedores do time e ambientes produção e desenvolvimento
  - cada arquivo é uma migration e sua ordenação ocorre por data (não depender de modificações futuras)
  - é possível desfazer uma migração se errar algo ou estiver desenvolvendo a feature
  - depois que a migration foi enviada para outros devs ou produção ela JAMAIS podera ser alterada, uma nova deve ser criada
  - cada migration deve realizar alterações em apenas uma tabela, você pode criar várias migrations para alterações maiores
- Seeds
  - popular base de dados para desenvolvimento
  - muito utilizado para popular dados para testes
  - executável apenas por código
  - jamais será utilizado em produção 
  - caso sejam dados que precisam ir para produção, a própria migration pode manipular dados das tabelas
- Arquitetura MVC
  - Estruturar pastas do projeto
  - Model
    - o model armazena a abstração do banco
    - utilizado para manipular dados contidos nas tabelas do banco
    - não possuem responsabilidade sobre a regra de negócio da nossa aplicação
  - Controller 
    - é o ponto de entrada das requisições da nossa aplicação
    - uma rotageralmente está associada diretamente com um método do controller
    - podemos incluir grande parte das regras de necócio da aplicação nos controllers 
    - conforme a aplicação cresce podemos isolar as regras
  - View
    - a view é o retorno ao cliente
    - em aplicações que não utiliza o modelo de API REST isso pode ser um HTML
    - mas no nosso caso é apenas o nosso JSON que será retornado ao front-end e depois manipuado pelo ReactJS ou React Native
  - A face de um controller
    - Classes
    - retorna um JSON
    - não chama outro controller/método
    - quando criar um novo controller
      - apenas 5 métodos (index, show, store, update, delete)
      - mais que 5 não / menos pode ser
    - estou falando da mesma entidade
      - exemplo de contollers de autenticação e sessão
